import{j as N,k as D,l as L,m as H,g as j,B as V,d as $,n as k,o as B,p as J,q as Z,W as q,S as Q,a as Y,O as X,i as T}from"./three.module-Cdr6prlM.js";/* empty css               */import{D as K}from"./DRACOLoader-9yoF831m.js";import{g as ee}from"./lil-gui.module.min-Vka56b52.js";import{S as te}from"./stats.module--VATS4Kh.js";import{T as ae}from"./TopoLinesPlugin-CzV0EGNc.js";import{C as ie}from"./CameraTransitionManager-DEZ_Jh2g.js";import{G as ne}from"./GlobeControls-zx-2mbFa.js";import{C as W,t as se}from"./Ellipsoid-CuSwTtSS.js";import{T as re}from"./TilesRenderer-CeXRket9.js";import{C as oe}from"./CesiumIonAuthPlugin-Be6mEtH1.js";import{T as ce}from"./TileCompressionPlugin-CalyNaQM.js";import{U as de}from"./UpdateOnChangePlugin-CWnEQ7XL.js";import{U as le}from"./UnloadTilesPlugin-CFbgACkU.js";import{T as he}from"./TilesFadePlugin-CvZ_qsK2.js";import{F as ue,G as me}from"./GLTFExtensionsPlugin-Be6LgQeY.js";import{W as w}from"./I3DMLoader-CCE0l15Y.js";import"./EnvironmentControls-BxHxh8we.js";import"./B3DMLoader-BP7KbjDP.js";import"./readMagicBytes-B3HEinov.js";import"./GLTFLoader-MuDEHmgM.js";import"./PNTSLoader-C1N3YT1_.js";import"./CMPTLoader-Asj2gLWV.js";import"./EllipsoidRegion-DVo7AClK.js";import"./EPSGTilesPlugin-zoCLijLZ.js";import"./TiledImageSource-BrtEEhz2.js";const A=new D,G=new L,R=new L;class pe extends N{constructor(...e){super(...e),this.resetDistance=1e4,this._matricesTextureHandle=null,this._lastCameraPos=new D,this._forceUpdate=!0,this._matrices=[]}setMatrixAt(e,t){super.setMatrixAt(e,t),this._forceUpdate=!0;const a=this._matrices;for(;a.length<=e;)a.push(new D);a[e].copy(t)}setInstanceCount(...e){super.setInstanceCount(...e);const t=this._matrices;for(;t.length>this.instanceCount;)t.pop()}onBeforeRender(e,t,a,r,d,i){super.onBeforeRender(e,t,a,r,d,i),G.setFromMatrixPosition(a.matrixWorld),R.setFromMatrixPosition(this._lastCameraPos);const c=this._matricesTexture;let s=this._modelViewMatricesTexture;if((!s||s.image.width!==c.image.width||s.image.height!==c.image.height)&&(s&&s.dispose(),s=c.clone(),s.source=new H({...s.image,data:s.image.data.slice()}),this._modelViewMatricesTexture=s),this._forceUpdate||G.distanceTo(R)>this.resetDistance){const l=this._matrices,h=s.image.data;for(let m=0;m<this.maxInstanceCount;m++){const p=l[m];p?A.copy(p):A.identity(),A.premultiply(this.matrixWorld).premultiply(a.matrixWorldInverse).toArray(h,m*16)}s.needsUpdate=!0,this._lastCameraPos.copy(a.matrixWorld),this._forceUpdate=!1}this._matricesTextureHandle=this._matricesTexture,this._matricesTexture=this._modelViewMatricesTexture,this.matrixWorld.copy(this._lastCameraPos)}onAfterRender(){this.updateMatrixWorld(),this._matricesTexture=this._matricesTextureHandle,this._matricesTextureHandle=null}onAfterShadow(e,t,a,r,d,i){this.onAfterRender(e,null,r,d,i)}dispose(){super.dispose(),this._modelViewMatricesTexture&&this._modelViewMatricesTexture.dispose()}}const M=new j,b=[];class ge extends pe{constructor(...e){super(...e),this.expandPercent=.25,this.maxInstanceExpansionSize=1/0,this._freeGeometryIds=[]}findFreeId(e,t,a){const r=!!this.geometry.index,d=Math.max(r?e.index.count:-1,a),i=Math.max(e.attributes.position.count,t);let c=-1,s=1/0;const l=this._freeGeometryIds;if(l.forEach((h,m)=>{const p=this.getGeometryRangeAt(h),{reservedIndexCount:g,reservedVertexCount:x}=p;if(g>=d&&x>=i){const I=d-g+(i-x);I<s&&(c=m,s=I)}}),c!==-1){const h=l[c];return l.splice(c,1),h}else return-1}addGeometry(e,t,a){const r=!!this.geometry.index;a=Math.max(r?e.index.count:-1,a),t=Math.max(e.attributes.position.count,t);const{expandPercent:d,_freeGeometryIds:i}=this;let c=this.findFreeId(e,t,a);if(c!==-1)this.setGeometryAt(c,e);else{const s=()=>{const m=this.unusedVertexCount<t,p=this.unusedIndexCount<a;return m||p},l=e.index,h=e.attributes.position;if(t=Math.max(t,h.count),a=Math.max(a,l?l.count:0),s()&&(i.forEach(m=>this.deleteGeometry(m)),i.length=0,this.optimize(),s())){const m=this.geometry.index,p=this.geometry.attributes.position;let g,x;if(m){const I=Math.ceil(d*m.count);g=Math.max(I,a,l.count)+m.count}else g=Math.max(this.unusedIndexCount,a);if(p){const I=Math.ceil(d*p.count);x=Math.max(I,t,h.count)+p.count}else x=Math.max(this.unusedVertexCount,t);this.setGeometrySize(x,g)}c=super.addGeometry(e,t,a)}return c}addInstance(e){if(this.maxInstanceCount===this.instanceCount){const t=Math.ceil(this.maxInstanceCount*(1+this.expandPercent));this.setInstanceCount(Math.min(t,this.maxInstanceExpansionSize))}return super.addInstance(e)}deleteInstance(e){const t=this.getGeometryIdAt(e);return t!==-1&&this._freeGeometryIds.push(t),super.deleteInstance(e)}raycastInstance(e,t,a){const r=this.geometry,d=this.getGeometryIdAt(e);M.material=this.material,M.geometry.index=r.index,M.geometry.attributes=r.attributes;const i=this.getGeometryRangeAt(d);M.geometry.setDrawRange(i.start,i.count),M.geometry.boundingBox===null&&(M.geometry.boundingBox=new V),M.geometry.boundingSphere===null&&(M.geometry.boundingSphere=new $),this.getMatrixAt(e,M.matrixWorld).premultiply(this.matrixWorld),this.getBoundingBoxAt(d,M.geometry.boundingBox),this.getBoundingSphereAt(d,M.geometry.boundingSphere),M.raycast(t,b);for(let c=0,s=b.length;c<s;c++){const l=b[c];l.object=this,l.batchId=e,a.push(l)}b.length=0}}function xe(o){return o.r===1&&o.g===1&&o.b===1}function fe(o){o.needsUpdate=!0,o.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <common>",`
				#include <common>
				varying float texture_index;
				`).replace("#include <uv_vertex>",`
				#include <uv_vertex>
				texture_index = getIndirectIndex( gl_DrawID );
				`),e.fragmentShader=e.fragmentShader.replace("#include <map_pars_fragment>",`
				#ifdef USE_MAP
				precision highp sampler2DArray;
				uniform sampler2DArray map;
				varying float texture_index;
				#endif
				`).replace("#include <map_fragment>",`
				#ifdef USE_MAP
					diffuseColor *= texture( map, vec3( vMapUv, texture_index ) );
				#endif
				`)}}const E=new ue(new Z),O=new J(new Uint8Array([255,255,255,255]),1,1);O.needsUpdate=!0;class Te{constructor(e={}){if(parseInt(k)<170)throw new Error("BatchedTilesPlugin: Three.js revision 170 or higher required.");e={instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,discardOriginalContent:!0,textureSize:null,material:null,renderer:null,...e},this.name="BATCHED_TILES_PLUGIN",this.priority=-1;const t=e.renderer.getContext();this.instanceCount=e.instanceCount,this.vertexCount=e.vertexCount,this.indexCount=e.indexCount,this.material=e.material?e.material.clone():null,this.expandPercent=e.expandPercent,this.maxInstanceCount=Math.min(e.maxInstanceCount,t.getParameter(t.MAX_3D_TEXTURE_SIZE)),this.renderer=e.renderer,this.discardOriginalContent=e.discardOriginalContent,this.textureSize=e.textureSize,this.batchedMesh=null,this.arrayTarget=null,this.tiles=null,this._onLoadModel=null,this._onDisposeModel=null,this._onVisibilityChange=null,this._tileToInstanceId=new Map}init(e){this._onDisposeModel=({scene:t,tile:a})=>{this.removeSceneFromBatchedMesh(t,a)},e.addEventListener("dispose-model",this._onDisposeModel),this.tiles=e}initBatchedMesh(e){if(this.batchedMesh!==null)return;const{instanceCount:t,vertexCount:a,indexCount:r,tiles:d,renderer:i,textureSize:c}=this,s=this.material?this.material:new e.material.constructor,l=new ge(t,t*a,t*r,s);l.name="BatchTilesPlugin",l.frustumCulled=!1,d.group.add(l),l.updateMatrixWorld();const h=e.material.map,m={colorSpace:h.colorSpace,wrapS:h.wrapS,wrapT:h.wrapT,wrapR:h.wrapS,magFilter:h.magFilter},p=new B(c||h.image.width,c||h.image.height,t);Object.assign(p.texture,m),i.initRenderTarget(p),s.map=p.texture,fe(s),this.arrayTarget=p,this.batchedMesh=l}setTileVisible(e,t){const a=e.cached.scene;if(t&&this.addSceneToBatchedMesh(a,e),this._tileToInstanceId.has(e)){this._tileToInstanceId.get(e).forEach(i=>{this.batchedMesh.setVisibleAt(i,t)});const d=this.tiles;return t?d.visibleTiles.add(e):d.visibleTiles.delete(e),d.dispatchEvent({type:"tile-visibility-change",scene:a,tile:e,visible:t}),!0}return!1}unloadTileFromGPU(e,t){return!this.discardOriginalContent&&this._tileToInstanceId.has(t)?(this.removeSceneFromBatchedMesh(e,t),!0):!1}assignTextureToLayer(e,t){this.expandArrayTargetIfNeeded();const{renderer:a}=this,r=a.getRenderTarget();a.setRenderTarget(this.arrayTarget,t),E.material.map=e,E.render(a),a.setRenderTarget(r),E.material.map=null,e.dispose()}expandArrayTargetIfNeeded(){const{batchedMesh:e,arrayTarget:t,renderer:a}=this,r=Math.min(e.maxInstanceCount,this.maxInstanceCount);if(r>t.depth){const d={colorSpace:t.texture.colorSpace,wrapS:t.texture.wrapS,wrapT:t.texture.wrapT,generateMipmaps:t.texture.generateMipmaps,minFilter:t.texture.minFilter,magFilter:t.texture.magFilter},i=new B(t.width,t.height,r);Object.assign(i.texture,d),a.initRenderTarget(i),a.copyTextureToTexture(t.texture,i.texture),t.dispose(),e.material.map=i.texture,this.arrayTarget=i}}removeSceneFromBatchedMesh(e,t){if(this._tileToInstanceId.has(t)){const a=this._tileToInstanceId.get(t);this._tileToInstanceId.delete(t),a.forEach(r=>{this.batchedMesh.deleteInstance(r)})}}addSceneToBatchedMesh(e,t){if(this._tileToInstanceId.has(t))return;const a=[];e.traverse(i=>{i.isMesh&&a.push(i)});let r=!0;a.forEach(i=>{if(this.batchedMesh&&r){const c=i.geometry.attributes,s=this.batchedMesh.geometry.attributes;for(const l in s)if(!(l in c)){r=!1;return}}});const d=!this.batchedMesh||this.batchedMesh.instanceCount+a.length<=this.maxInstanceCount;if(r&&d){e.updateMatrixWorld();const i=[];a.forEach(c=>{this.initBatchedMesh(c);const{geometry:s,material:l}=c,{batchedMesh:h,expandPercent:m}=this;h.expandPercent=m;const p=h.addGeometry(s,this.vertexCount,this.indexCount),g=h.addInstance(p);i.push(g),h.setMatrixAt(g,c.matrixWorld),h.setVisibleAt(g,!1),xe(l.color)||(l.color.setHSL(Math.random(),.5,.5),h.setColorAt(g,l.color));const x=l.map;x?this.assignTextureToLayer(x,g):this.assignTextureToLayer(O,g)}),this._tileToInstanceId.set(t,i),this.discardOriginalContent&&(t.cached.textures.forEach(c=>{c.image instanceof ImageBitmap&&c.image.close()}),t.cached.scene=null,t.cached.materials=[],t.cached.geometries=[],t.cached.textures=[])}}raycastTile(e,t,a,r){return this._tileToInstanceId.has(e)?(this._tileToInstanceId.get(e).forEach(i=>{this.batchedMesh.raycastInstance(i,a,r)}),!0):!1}dispose(){const{arrayTarget:e,tiles:t,batchedMesh:a}=this;e&&e.dispose(),a&&(a.material.dispose(),a.geometry.dispose(),a.dispose(),a.removeFromParent()),t.removeEventListener("dispose-model",this._onDisposeModel)}getTileBatchIds(e){return this._tileToInstanceId.get(e)}}let y,_,C,n,u,S,P;const f={orthographic:!1,enableCacheDisplay:!1,enableRendererStats:!1,useBatchedMesh:!!new URLSearchParams(window.location.hash.replace(/^#/,"")).get("batched"),displayTopoLines:!1,errorTarget:20,reload:U};Ce();z();function U(){n&&(_.remove(n.group),n.dispose(),n=null),n=new re,n.registerPlugin(new oe({apiToken:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3MGNiODVmZS1hNzliLTQ5NWYtOTdhOS02ZmIzMmZlYWRlMzAiLCJpZCI6MjY3NzgzLCJpYXQiOjE3MzY0Mjg0MTJ9.o7EtbJyQ6yNAgfHFal1RS1BKKM-RmZNusqBCeiowNZo",assetId:"2275207",autoRefreshToken:!0})),n.registerPlugin(new ce),n.registerPlugin(new de),n.registerPlugin(new le),n.registerPlugin(new he),n.registerPlugin(new ae({projection:"ellipsoid"})),n.registerPlugin(new me({dracoLoader:new K().setDecoderPath("https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/")})),f.useBatchedMesh&&n.registerPlugin(new Te({renderer:C,discardOriginalContent:!1,instanceCount:250})),n.group.rotation.x=-Math.PI/2,_.add(n.group),n.setResolutionFromRenderer(u.camera,C),n.setCamera(u.camera),y.setTilesRenderer(n)}function Ce(){C=new q({antialias:!0}),C.setClearColor(1383455),document.body.appendChild(C.domElement),_=new Q,u=new ie(new Y(60,window.innerWidth/window.innerHeight,1,16e7),new X(-1,1,1,-1,1,16e7)),u.perspectiveCamera.position.set(48e5,257e4,1472e4),u.perspectiveCamera.lookAt(0,0,0),u.autoSync=!1,u.addEventListener("camera-change",({camera:a,prevCamera:r})=>{n.deleteCamera(r),n.setCamera(a),y.setCamera(a)}),u.orthographicPositionalZoom=!1,y=new ne(_,u.camera,C.domElement,null),y.enableDamping=!0,U(),v(),window.addEventListener("resize",v,!1),window.addEventListener("hashchange",F);const o=new ee;o.width=300,o.add(f,"orthographic").onChange(a=>{y.getPivotPoint(u.fixedPoint),u.animating||(u.syncCameras(),y.adjustCamera(u.perspectiveCamera),y.adjustCamera(u.orthographicCamera)),u.toggle()});const e=o.addFolder("Google Photorealistic Tiles");e.add(f,"useBatchedMesh").listen(),e.add(f,"reload");const t=o.addFolder("Example Options");t.add(f,"displayTopoLines").listen(),t.add(f,"enableCacheDisplay"),t.add(f,"enableRendererStats"),t.add(f,"errorTarget",5,100,1).onChange(()=>{n.getPluginByName("UPDATE_ON_CHANGE_PLUGIN").needsUpdate=!0}),S=document.createElement("div"),document.getElementById("info").appendChild(S),P=new te,P.showPanel(0),document.body.appendChild(P.dom),F(),setInterval(Me,100)}function v(){const{perspectiveCamera:o,orthographicCamera:e}=u,t=window.innerWidth/window.innerHeight;o.aspect=t,o.updateProjectionMatrix(),e.left=-e.top*t,e.right=-e.left,e.updateProjectionMatrix(),C.setSize(window.innerWidth,window.innerHeight),C.setPixelRatio(window.devicePixelRatio)}function Me(){if(!n)return;const o=u.camera,e={},t={},a=n.group.matrixWorld.clone().invert(),r=o.position.clone().applyMatrix4(a),d=o.matrixWorld.clone().premultiply(a);w.getPositionToCartographic(r,e),w.getAzElRollFromRotationMatrix(e.lat,e.lon,d,t,W),t.azimuth*=T.RAD2DEG,t.elevation*=T.RAD2DEG,t.roll*=T.RAD2DEG,e.lat*=T.RAD2DEG,e.lon*=T.RAD2DEG;const i=new URLSearchParams;i.set("lat",e.lat.toFixed(4)),i.set("lon",e.lon.toFixed(4)),i.set("height",e.height.toFixed(2)),i.set("az",t.azimuth.toFixed(2)),i.set("el",t.elevation.toFixed(2)),i.set("roll",t.roll.toFixed(2)),f.useBatchedMesh&&i.set("batched",1),window.history.replaceState(void 0,void 0,`#${i}`)}function F(){const o=window.location.hash.replace(/^#/,""),e=new URLSearchParams(o);if(e.has("batched")&&(f.useBatchedMesh=!!e.get("batched")),!e.has("lat")&&!e.has("lon"))return;n.group.updateMatrixWorld();const t=u.camera,a=parseFloat(e.get("lat")),r=parseFloat(e.get("lon")),d=parseFloat(e.get("height"))||1e3;if(e.has("az")&&e.has("el")){const i=parseFloat(e.get("az")),c=parseFloat(e.get("el")),s=parseFloat(e.get("roll"))||0;w.getRotationMatrixFromAzElRoll(a*T.DEG2RAD,r*T.DEG2RAD,i*T.DEG2RAD,c*T.DEG2RAD,s*T.DEG2RAD,t.matrixWorld,W),t.matrixWorld.premultiply(n.group.matrixWorld),t.matrixWorld.decompose(t.position,t.quaternion,t.scale),w.getCartographicToPosition(a*T.DEG2RAD,r*T.DEG2RAD,d,t.position),t.position.applyMatrix4(n.group.matrixWorld)}else w.getCartographicToPosition(a*T.DEG2RAD,r*T.DEG2RAD,d,t.position),t.position.applyMatrix4(n.group.matrixWorld),t.lookAt(0,0,0)}function z(){if(requestAnimationFrame(z),!n)return;y.enabled=!u.animating,y.update(),u.update();const o=u.camera;n.setResolutionFromRenderer(o,C),n.setCamera(o);const e=n.getPluginByName("TOPO_LINES_PLUGIN");e.topoOpacity=f.displayTopoLines?.5:0,e.cartoOpacity=f.displayTopoLines?.5:0,o.updateMatrixWorld(),n.errorTarget=f.errorTarget,n.update(),C.render(_,o),P.update(),ye()}function ye(){var d,i,c;let o="";if(f.enableCacheDisplay){const s=n.lruCache,l=s.cachedBytes/s.maxBytesSize;o+=`Downloading: ${n.stats.downloading} Parsing: ${n.stats.parsing} Visible: ${n.visibleTiles.size}<br/>`,o+=`Cache: ${(100*l).toFixed(2)}% ~${(s.cachedBytes/1e3/1e3).toFixed(2)}mb<br/>`}if(f.enableRendererStats){const s=C.info.memory,l=C.info.render,h=C.info.programs.length;o+=`Geometries: ${s.geometries} Textures: ${s.textures} Programs: ${h} Draw Calls: ${l.calls}`;const m=n.getPluginByName("BATCHED_TILES_PLUGIN"),p=n.getPluginByName("FADE_TILES_PLUGIN");if(m){let g=0;(d=m.batchedMesh)==null||d._instanceInfo.forEach(x=>{x.visible&&x.active&&g++}),(i=p.batchedMesh)==null||i._instanceInfo.forEach(x=>{x.visible&&x.active&&g++}),o+=", Batched: "+g}}S.innerHTML!==o&&(S.innerHTML=o);const e=n.group.matrixWorld.clone().invert(),t=u.camera.position.clone().applyMatrix4(e),a={};w.getPositionToCartographic(t,a);const r=((c=n.getAttributions()[0])==null?void 0:c.value)||"";document.getElementById("credits").innerText=se(a.lat,a.lon)+`
`+r}
